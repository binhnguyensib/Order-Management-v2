basePath: /api
definitions:
  domain.Cart:
    properties:
      customer_id:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/domain.CartItem'
        type: array
      total_items:
        type: integer
      total_price:
        type: number
    type: object
  domain.CartItem:
    properties:
      product_id:
        type: string
      product_name:
        type: string
      product_price:
        type: number
      quantity:
        type: integer
      subtotal:
        type: number
    type: object
  domain.CartItemRequest:
    properties:
      product_id:
        type: string
      product_name:
        type: string
      quantity:
        type: integer
    type: object
  domain.Customer:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  domain.CustomerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  domain.Order:
    properties:
      created_at:
        type: string
      customer_id:
        type: string
      id:
        type: string
      product_ids:
        items:
          type: string
        type: array
      total_amount:
        type: number
    type: object
  domain.OrderRequest:
    properties:
      customer_id:
        type: string
      product_ids:
        items:
          type: string
        type: array
      total_amount:
        type: number
    type: object
  domain.Product:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  domain.ProductRequest:
    properties:
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
host: order-management-v2.vercel.app
info:
  contact: {}
  description: This is a sample server for managing orders, customers, products, and
    carts.
  title: Order Management API
  version: "2.0"
paths:
  /customers:
    get:
      consumes:
      - application/json
      description: Retrieve all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Customer'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get all customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create a new customer with the provided details
      parameters:
      - description: Customer details
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/domain.CustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Customer'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new customer
      tags:
      - Customers
  /customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Customer'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Delete a customer
      tags:
      - Customers
    get:
      consumes:
      - application/json
      description: Retrieve a customer by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Customer'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get customer by ID
      tags:
      - Customers
    put:
      consumes:
      - application/json
      description: Update an existing customer with the provided details
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer details
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/domain.CustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Customer'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update an existing customer
      tags:
      - Customers
  /customers/{id}/cart:
    delete:
      consumes:
      - application/json
      description: Clear all items from the customer's cart
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Clear cart
      tags:
      - Cart
    get:
      consumes:
      - application/json
      description: Retrieve the cart for a specific customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get cart by customer ID
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Add a product to the customer's cart
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Cart Item Request
        in: body
        name: cartItem
        required: true
        schema:
          $ref: '#/definitions/domain.CartItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Add item to cart
      tags:
      - Cart
  /customers/{id}/cart/{product_id}:
    delete:
      consumes:
      - application/json
      description: Remove a product from the customer's cart
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Remove item from cart
      tags:
      - Cart
  /orders:
    get:
      consumes:
      - application/json
      description: Retrieve all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Order'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create a new order with the provided details
      parameters:
      - description: Order Request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/domain.OrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new order
      tags:
      - Orders
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Delete an order
      tags:
      - Orders
    get:
      consumes:
      - application/json
      description: Retrieve an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get order by ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update an order with the provided details
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Order Request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/domain.OrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update an existing order
      tags:
      - Orders
  /products:
    get:
      consumes:
      - application/json
      description: Retrieve all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get all products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create a new product with the provided details
      parameters:
      - description: Product Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Delete a product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Retrieve a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get product by ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update a product with the provided details
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update an existing product
      tags:
      - Products
swagger: "2.0"
